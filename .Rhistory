tmp2 <- list(c(1,2,3), c(3,4,5), c(1,2))
sapply(tmp2, function(x) length(x))
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
col.names = colNam)
library(knitr)
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
col.names = colNam)
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
col.names = colNam)
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
combinedResult[which(!duplicated(combinedResult[,16:20])),colum]
combinedResult[which(!duplicated(combinedResult[,16:20])),colum]
colNam
?kable
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
col.names = colNam)
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
ibrary(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("babynames")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
filter(babynames, name %>% substr(1, 3) %>% equals("Ste"))
distinct(babynames, name)
arrange(babynames, desc(distinct(babynames, name)))
arrange(babynames, desc(distinct(name))
arrange(babynames, desc(distinct(name)))
distinct(babynames,name))
distinct(babynames,name)
namen <- distinct(babynames, name)
View(namen)
arrange(desc(namen)
)
arrange(desc(namen))
filter(name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste"))
filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"'))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
#filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
stNamen<-filter(babynames,name %>% substr(1, 3) %>% equals("Ste"))
View(stNamen)
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex)
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line")
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"'))
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
rnorm(n=2)
rnorm(n=10)
rnorm(n=2, mean=5, sd=2)
rnorm(n=10, mean=5, sd=2)
tmp <- LOF(data[,unlist(x), with=F], k = minPts)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
tmp <- LOF(data[,unlist(x), with=F], k = minPts)
LOF
library("FNN")
data<- query<- cbind(1:10, 1:10)
View(data)
get.knn(data, k=5)
source('D:/Uni/SS16/Hiwi/github/Ausprobieren/knn.R', echo=TRUE)
Rcpp::sourceCpp('D:/Uni/WS1617/Masterarbeit/05_Implementierungen/nearestNeighbors.cpp')
Rcpp::sourceCpp('D:/Uni/SS16/Hiwi/github/R-subcon/src/nearestNeighbors.cpp')
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x")
Rcpp::sourceCpp('D:/Uni/SS16/Hiwi/github/R-subcon/src/nearestNeighbors.cpp')
library(subcon)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
Rcpp::sourceCpp('D:/Uni/SS16/Hiwi/github/R-subcon/src/nearestNeighbors.cpp')
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
read_chunk("generatePlots.R")
```
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset",
col.names = colNam)
View(combinedResult)
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset") #,      col.names = colNam)
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset", col.names = c("1","2","16","17","18","19","20" ))
dimnames(.length)
length(dimnames())
length(dimnames(2))
length(dimnames[2])
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset", col.names = c("1","2")) #,"16","17","18","19","20" ))
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum], caption = "Top-5-Subspaces - Glass-Dataset", col.names = c("1","2","16")) #,"17","18","19","20" ))
new<-combinedResult[which(!duplicated(combinedResult[,16:20])),colum]
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum,with=FALSE], caption = "Top-5-Subspaces - Glass-Dataset", col.names = c("1","2","16","17","18","19","20" ))
View(combinedResult)
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum,with=FALSE], caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
load("results/Param_100_500_100/experimentResult_ion_161019.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum,with=FALSE], caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
load("results/Param_100_500_100/experimentResult_pen_161019.RData")
kable(combinedResult[which(!duplicated(combinedResult[,16:20])),colum,with=FALSE], caption = "Top-5-Subspaces - Pendigits-Dataset",  col.names = colNam)
View(combinedResult)
View(combinedResult)
combRes <-combinedResult[,colum, with=FALSE]
View(combRes)
View(combRes)
combResU <-combRes[!duplicated(combRes)]
View(combResU)
kable(combResU, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
long_DF <- combResU %>% gather(name, subsp, subsp1:subsp5)
View(long_DF)
sorted <- long_DF[order(dataset),] // todo: funktioniert nicht
sorted <- long_DF[order(dataset),] # todo: funktioniert nicht
View(combResU)
View(long_DF)
combResUG <- cbind(combResUG, combResUI, combResUP)
combResUG <- rbind(combResUG, combResUI, combResUP)
combResUG <- rbind(combResUG, combResUI, combResUP)
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
load("results/Param_100_500_100/experimentResult_glass_161013.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
load("results/Param_100_500_100/experimentResult_ion_161019.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
load("results/Param_100_500_100/experimentResult_pen_161019.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUP <-combRes[!duplicated(combRes)]
kable(combResUP, caption = "Top-5-Subspaces - Pendigits-Dataset", col.names = colNam)
combResUG <- rbind(combResUG, combResUI, combResUP)
View(combResUG)
View(long_DF)
long_DF <- combResUG %>% gather(name, subsp, subsp1:subsp5)
View(long_DF)
subspaces <- mutate(long_DF, length = length(subsp))
View(subspaces)
View(combResUG)
View(subspaces)
length(subsp[1])
length(long_DF$subsp[1])
length(long_DF$subsp[2])
long_DF$subsp[2]
as.vector(long_DF$subsp[2])
length(as.vector(long_DF$subsp[2]))
View(long_DF)
length(as.numeric(long_DF$subsp[2])) # Inhalt: "[1,2,3,4,5,6,7]", Length=1 (statt 7)
as.numeric(long_DF$subsp[2]
as.numeric(long_DF$subsp[2]
class(long_DF$subsp[2])
test <- as.numeric(long_DF$subsp[2]
View(subspaces)
test
test <- as.numeric(long_DF$subsp[2])
test
load("results/Param_100_050_020/experimentResult_glass_161102_100_50_20.RData") # glass
tmp <- combinedResult
View(tmp)
load("results/Param_100_050_020/experimentResult_glass_161102_100_50_20.RData") # glass
tmp <- combinedResult
load("results/Param_100_050_020/experimentResult_ann_diabet_ion_161102_100_50_20.RData") # ann, diabetes, ion
tmp <- rbind(tmp, combinedResult)
load("results/Param_100_050_020/experimentResult_pen_lymph_segm_161102_100_50_20.RData") # pen, lymph, segment
tmp <- rbind(tmp, combinedResult)
combinedResult <- tmp
plotThemeReal <- theme_bw() +
theme(plot.title = element_text(size=40, vjust = 2.5, face = "bold"),
axis.title.x = element_text(margin = margin(15,0,0,0)),
axis.title.y = element_text(margin = margin(0,15,0,0)),
axis.text = element_text(margin = margin(0,0,0,0)),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0, 0, 0.3, 0), "lines"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.3, color="black"),
legend.key = element_rect(size=1, color="white"),
legend.key.size = unit(1, "lines"),
legend.key.height=unit(1,"lines"),
legend.title = element_blank(),
legend.position = "right",
strip.background = element_blank(),
strip.text = element_text(size = 12),
panel.margin.x=unit(1.5, "lines"))
ggplot(aes(x=dataset , y=AUC_sum, fill=algorithm)) +
geom_boxplot() +
xlab(label = "Datasets") +
ylab(label = "AUC") +
plotThemeReal +
scale_y_continuous(limits = c(0.5,1)) +
scale_fill_grey(start = 0.1, end = 0.7)
View(subspaces)
load("results/Param_100_050_020/experimentResult_glass_161102_100_50_20.RData") # glass
tmp <- combinedResult
load("results/Param_100_050_020/experimentResult_ann_diabet_ion_161102_100_50_20.RData") # ann, diabetes, ion
tmp <- rbind(tmp, combinedResult)
load("results/Param_100_050_020/experimentResult_pen_lymph_segm_161102_100_50_20.RData") # pen, lymph, segment
tmp <- rbind(tmp, combinedResult)
combinedResult <- tmp
plotThemeReal <- theme_bw() +
theme(plot.title = element_text(size=40, vjust = 2.5, face = "bold"),
axis.title.x = element_text(margin = margin(15,0,0,0)),
axis.title.y = element_text(margin = margin(0,15,0,0)),
axis.text = element_text(margin = margin(0,0,0,0)),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0, 0, 0.3, 0), "lines"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.3, color="black"),
legend.key = element_rect(size=1, color="white"),
legend.key.size = unit(1, "lines"),
legend.key.height=unit(1,"lines"),
legend.title = element_blank(),
legend.position = "right",
strip.background = element_blank(),
strip.text = element_text(size = 12),
panel.margin.x=unit(1.5, "lines"))
ggplot(combinedResult, aes(x=dataset , y=AUC_sum, fill=algorithm)) +
geom_boxplot() +
xlab(label = "Datasets") +
ylab(label = "AUC") +
plotThemeReal +
scale_y_continuous(limits = c(0.5,1)) +
scale_fill_grey(start = 0.1, end = 0.7)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/Param_100_050_020/experimentResult_glass_161102_100_50_20.RData")
View(combinedResult)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
combinedResult$V1
combinedResult$V1[29]
class(combinedResult$V1[29])
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 50, topkOutput = 20)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
library(data.table)
library(foreach)
library("FNN")
library(ggplot2)
library(subcon)
library(dplyr)
library(tidyr)
########################################################################################
# functions
########################################################################################
importData <- function(inputPath, fileName){
if(grepl(".csv", fileName)){
dataset_labeled <- fread(paste0(inputPath, "/", fileName))
}else{
dataset_labeled <- as.data.table(read.arff(paste0(inputPath,"/", fileName)))
}
if("id" %in% names(dataset_labeled)){
dataset_labeled <- dataset_labeled[,!"id", with=F]
}
if("outlier" %in% names(dataset_labeled)) {
names(dataset_labeled)[which(names(dataset_labeled)=="outlier")] <- "class"
}
if(!("class" %in% names(dataset_labeled))) {
names(dataset_labeled)[ncol(dataset_labeled)] <- "class"
}
if("yes" %in% levels(dataset_labeled$class)){
dataset_labeled$class <- as.numeric(dataset_labeled$class == "yes")
}else{
if(is.factor(dataset_labeled$class)){
dataset_labeled$class <- as.numeric(levels(dataset_labeled$class))[dataset_labeled$class]
}
dataset_labeled[,class:=ifelse(class>0, 1, 0),]
}
dataset_labeled
}
reverseNN <- function(dt,k){
stopifnot(k<nrow(dt))
knnList <- get.knn(dt,k = k)
rnnList <- reverseNearestNeighborsC(knnList$nn.index)
rnnCount <- rnnCountC(rnnList)
rnnVec <- rnnCountCVec(rnnList)
rnnVec
}
########################################################################################
# rnn
########################################################################################
colum <- c(2,16:20)
k <- 5
load("experimentResult_allDatasets.RData")
inputPath <- "D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets"
# todo: Selektion der Spalten funktioniert nicht:
# top5SS <-combinedResult[which(!duplicated(combinedResult[,16:20])),colum, ,with=FALSE]
# top5SSN <-combinedResult[,16:20]
# col <- c("dataset", "subsp1", "subsp2")
# test <- data.table(combinedResult)
# test[,col, with=FALSE]
# Selektion der relevanten Spalten
combRes <-combinedResult[,colum, with=FALSE]
combResU <-combRes[!duplicated(combRes)]
View(combResU)
combResU
combResU
nrow(combResU)
for(i in 1:nrow(combResU)){
ds <- combResU[i,]
ds <- combResU[i,]
ds <- combResU[1,]
dataset_labeled <- importData(inputPath, ds$dataset)
print("Datasets:")
print(ds$dataset)
# dataset_labeled <- importData(inputPath, "ann_thyroid.csv")
dt <- data.table(dataset_labeled)
# rnn-Count - FULLSPACE
rnnVec <- reverseNN(dt, k)
# Histogram
hist(rnnVec)
distRnn <- table(rnnVec)
p <- ggplot() + aes(rnnVec) +geom_histogram(binwidth=.5)
p + labs(title="Distribution of rnn-Counts - FULLSPACE") + xlab(paste0("Neighborhoodsize", ds$dataset, sep=" ")) +  ylab("counts")
distRnn <- table(rnnVec)
p <- ggplot() + aes(rnnVec) +geom_histogram(binwidth=.5)
p + labs(title="Distribution of rnn-Counts - FULLSPACE") + xlab(paste0("Neighborhoodsize,", ds$dataset, sep=" ")) +  ylab("counts")
long_DF <- combResU %>% gather(name, subsp, subsp1:subsp5)
View(long_DF)
