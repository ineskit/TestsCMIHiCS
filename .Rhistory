View(long_DF)
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
subspaces <- mutate(long_DF, length = lengthSS)
sortedSS <- subspaces[order(subspaces$algorithm),]
View(sortedSS)
#   global mean
mean(subspaces$length)
# mean per algorithm
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
# mean per algorithm per dataset
datasDistinct <- subspaces %>% select(dataset) %>% distinct
algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
}
# algo <- rep(algorDistinct, length(datasDistinct))
# datas <- rep(datasDistinct, nrow(algorDistinct))
dste
View(dste)
View(dste)
rm(dste)
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
}
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
dste <- data.frame()
olum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
colSSVec <- c(1,2,36:55)
# load("results/Param_100_500_100/experimentResult_glass_161013.RData")
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
# Subspace Vector
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
# load("results/Param_100_500_100/experimentResult_ion_161019.RData")
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
# Subspace Vector
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
read_chunk("generatePlots.R")
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
colSSVec <- c(1,2,36:55)
# load("results/Param_100_500_100/experimentResult_glass_161013.RData")
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
# Subspace Vector
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
# load("results/Param_100_500_100/experimentResult_ion_161019.RData")
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
# Subspace Vector
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
View(ionSSU)
load("results/Param_100_500_100/experimentResult_pen_161019.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUP <-combRes[!duplicated(combRes)]
kable(combResUP, caption = "Top-5-Subspaces - Pendigits-Dataset", col.names = colNam)
ssv <- rbind(glassSSU, ionSSU)
# gather first
long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)
# sortedSS <- long_DF[order(long_DF$dataset),]
# subspace length
lengthSS <- c(length(long_DF$subsp[[1]]))
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
subspaces <- mutate(long_DF, length = lengthSS)
# mean per algorithm per dataset
# datasDistinct <- subspaces %>% select(dataset) %>% distinct
# algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
View(algdsDistinct)
dste <- data.frame()
View(subspaces)
nrow(algdsDistinct)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[1] & subspaces$dataset == algdsDistinct$dataset[1])             %>% select(length)
tmpdf
tmpMean <- mean(tmpdf$length)
tmpMean
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
v
v <- data.frame(dataset = algdsDistinct$dataset[1], algorithm = algdsDistinct$algorithm[1], mean = tmpMean)
v
dste <- rbind(dste, v)
dste
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[2] & subspaces$dataset == algdsDistinct$dataset[2])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[2], algorithm = algdsDistinct$algorithm[2], mean = tmpMean)
dste <- rbind(dste, v)
dste
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
View(SSGMD)
ggplot(dste, aes(factor(dataset), mean, fill=dataset, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
View(combinedResult)
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
read_chunk("generatePlots.R")
colSSVec <- c(1,2,36:55)
load("results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
annSS <-combinedResult[,colSSVec, with=FALSE]
annSSU <-annSS[!duplicated(annSS$algorithm)]
# load("results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
# breastSS <-combinedResult[,colSSVec, with=FALSE]
# breastU <-breastSS[!duplicated(breastSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_diabetes_161206.RData")
diabSS <-combinedResult[,colSSVec, with=FALSE]
diabSSU <-diabSS[!duplicated(diabSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_lymph_161206.RData")
lympSS <-combinedResult[,colSSVec, with=FALSE]
lympSSU <-lympSS[!duplicated(lympSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_pen_161206.RData")
penSS <-combinedResult[,colSSVec, with=FALSE]
penSSU <-penSS[!duplicated(penSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_segmentn_161206.RData")
segmSS <-combinedResult[,colSSVec, with=FALSE]
segmSSU <-segmSS[!duplicated(segmSS$algorithm)]
ssv <- rbind(annSSU, diabSSU, glassSSU, ionSSU, lympSSU, penSSU, segmSSU)
View(ssv)
# gather first
long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)
# sortedSS <- long_DF[order(long_DF$dataset),]
# subspace length
lengthSS <- c(length(long_DF$subsp[[1]]))
#   .. add length as new column
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
lengthSS
subspaces <- mutate(long_DF, length = lengthSS)
# mean per algorithm per dataset
# datasDistinct <- subspaces %>% select(dataset) %>% distinct
# algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
dfMean <- data.frame()
for (i in 1:nrow(algdsDistinct)){
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dfMean  <- rbind(dfMean, v)
}
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
# ggtitle("Average size of Top20-Subspaces") +
labs(title ="Average size of Top20-Subspaces", y = "Mean size")
# MEAN
#   global mean
mean(subspaces$length)
#   mean per algorithm
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
View(tmpdf)
View(dfMean)
#   mean per algorithm
meanAlg <- data.frame()
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
meanCMI <- mean(SSCMI$length)
nL <- data.frame(algorithm = "CMI", mean = meanCMI)
meanAlg <- rbind(meanAlg, nL)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
meanHics <- mean(SSHics$length)
nL <- data.frame(algorithm = "HiCS", mean = meanHics)
meanAlg <- rbind(meanAlg, nL)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
meanGMD <- mean(SSGMD$length)
nL <- data.frame(algorithm = "GMD", mean = meanGMD)
meanAlg <- rbind(meanAlg, nL)
meanAlg
ggplot(meanAlg, mapping = aes(factor(algorithm), mean))
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
labs(title ="Average size of Top20-Subspaces per algorithm", y = "Mean size")
ggplot(meanAlg, mapping = aes(factor(algorithm), mean, x=algorithm, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
labs(title ="Average size of Top20-Subspaces per algorithm", y = "Mean size")
View(combinedResult)
View(algdsDistinct)
diabetes <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/diabetes.csv", header=FALSE, sep=";")
View(diabetes)
nrow(combinedResult)
ncol(combinedResult)
madelonnorm <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/madelonnorm.csv", header=FALSE, sep=";")
View(madelonnorm)
madelonnorm <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/madelonnorm.csv", header=FALSE, sep=";")
View(madelonnorm)
ncol(combinedResult)
ncol(madelonnorm)
nrow(madelonnorm)
diabetes <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/diabetes.csv", header=FALSE, sep=";")
View(diabetes)
nrow(diabetes)
ncol(diabetes)
breast_diag <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/breast_diag.csv", header=FALSE, sep=";")
View(breast_diag)
ncol(breast_diag)
nrow(breast_diag)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 10, topkOutput = 10)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 10, topkOutput = 10)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 10, topkOutput = 10)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 10, topkOutput = 10)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 10, numCores=1, topkSearch = 10, topkOutput = 10)
class(top20SSV)
class(top20SSV$subspV_tmp)
top20SSV
View(combinedResult)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
View(top20SSV)
View(combinedResult)
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
names(top20SSV)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
dtTest <- data.table()
names(dtTest)
a <- c(1:10)
b<- c(10:20)
dtTest <- cbind(a,b)
dtTest <- data.table(cbind(a,b))
dtTest <- data.table(cbind(dtTest, a))
b
b <- c(11:20)
t <- cbind(a,b)
t
t <- data.table(t)
names(t)
names(t[1]) <- "neu"
names(t[1])
names(t)
class(names(t))
names(t(1))
names(t[1])
names(t[1][[1]])
colnames(t)
colnames(t)[1]
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
debugSource('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 20, numCores=1, topkSearch = 10, topkOutput = 10)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 10, topkOutput = 10)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 100, topkOutput = 100)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_100_100_100.RData")
View(combinedResult)
library(dplyr)
cRGlass <- filter(combinedResult, dataset == "glass.csv")
View(cRGlass)
Kontraste <- combinedResult[,115:215, with=FALSE]
Kontraste <- combinedResult[,115:215, with=FALSE]
Kontraste <- combinedResult[,115:215]
View(combinedResult)
Kontraste <- combinedResult[,c(116:215), with=FALSE]
Kontraste <- combinedResult[,c(116:215)]
head(combinedResult)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_Hics_100_100_100_20170222.RData")
Kontraste <- combinedResult[,c(116:215), with=FALSE]
Kontraste <- combinedResult[,c(116:215)]
View(Kontraste)
View(combinedResult)
Kontraste2 <- Kontraste[!duplicated(Kontraste)]
View(Kontraste2)
Kontraste[which(duplicated(Kontraste)),]
bsp4[which(duplicated(bsp4)),]
Kontraste[which(duplicated(Kontraste)),]
Kontraste[which(!duplicated(Kontraste)),]
K2 <- Kontraste[which(!duplicated(Kontraste)),]
View(K2)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 500, topkOutput = 100)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 100, topkOutput = 100)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_Hics_100_100_100_20170222.RData")
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_madelon_Hics_100_100_100_20170222.RData")
View(combinedResult)
relC <- c(1:2, 16:215)
Kontraste <- combinedResult[,relC]
Kontraste <- combinedResult[,relC, with=FALSE]
View(Kontraste)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_Hics_100_100_100_20170222.RData")
tmp <- combinedResult
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_madelon_Hics_100_100_100_20170222.RData")
combinedResult <- rbind(tmp, combinedResult)
relC <- c(1:2, 16:215)
Kontraste <- combinedResult[,relC, with=FALSE]
View(Kontraste)
K2 <- Kontraste[which(!duplicated(Kontraste)),]
SSCont <- c(16:215)
K2 <- Kontraste[which(!duplicated(Kontraste[,SSCont])),]
K2 <-Kontraste[!duplicated(Kontraste[,SSCont, with=FALSE]),SSCont, with=FALSE]
SSCont <- c(3:202)
K2 <-Kontraste[!duplicated(Kontraste[,SSCont, with=FALSE]),SSCont, with=FALSE]
View(Kontraste)
K2 <- Kontraste[which(!duplicated(Kontraste$algorithm)),]
View(K2)
!duplicated(Kontraste$algorithm)
!unique(Kontraste$algorithm)
!duplicated(Kontraste)
!duplicated(Kontraste[,SSCont])
View(combinedResult)
View(Kontraste)
combinedResult %>% select(relC) %>% distinct(subsp1)
top100SSHics <- combinedResult %>% select(dataset, subsp1:subsp100, contr1:contr100) %>% group_by(dataset) %>% filter(row_number() == 1)
ncol(top100SSHics)
View(top100SSHics)
View(top100SSHics)
Kontraste <- top100SSHics[,"contr1":"contr100"]
View(Kontraste)
?select
Kontraste <- filter(top100SSHics,"contr1":"contr100")
?filter
Kontraste <- select(top100SSHics,"contr1":"contr100")
Kontraste <- select(top100SSHics,c("contr1":"contr100"))
Kontraste <- select(top100SSHics,... = c("contr1"))
Kontraste <- select(top100SSHics,... = c(1))
View(Kontraste)
Kontraste <- select(top100SSHics,... = c(102:201))
View(Kontraste)
format(Sys.Date(), format="%Y %m %d")
format(Sys.Date(), format="%Y%m%d")
top100d3 <- NULL
for (i in 1:nrow(top100SSHics)){
datas_tmp <- top100SSHics[i,1][[1]]
for (j in 2:ncol(top100SSHics)) {
if (length(top100SSHics[i,j][[1]][[1]]) == 3){
dtRow <- data.table(cbind(dataset = datas_tmp, d3SS = top100SSHics[i,j][[1]], position = j-1))
top100d3    <- rbind(top100d3, dtRow)
}
}
}
# Is there a correlation between the HicS-contrasts and the hub-overlap of the 3-dim. SS towards their 2-dim projections?
#
library(dplyr)
# load files
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_Hics_100_100_100_20170222.RData")
tmp <- combinedResult
# madelonnorm = extra file:
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult_madelon_Hics_100_100_100_20170222.RData")
combinedResult <- rbind(tmp, combinedResult)
# filter relevant columns & delete duplicates
top100SSHics <- combinedResult %>% select(dataset, subsp1:subsp100, contr1:contr100) %>% group_by(dataset) %>% filter(row_number() == 1)
ncol(top100SSHics) # 201 (inkl. Dataset)
# Kontraste <- select(top100SSHics,... = c(102:201))
top100d3 <- NULL
for (i in 1:nrow(top100SSHics)){
datas_tmp <- top100SSHics[i,1][[1]]
for (j in 2:ncol(top100SSHics)) {
if (length(top100SSHics[i,j][[1]][[1]]) == 3){
dtRow <- data.table(cbind(dataset = datas_tmp, d3SS = top100SSHics[i,j][[1]], position = j-1))
top100d3    <- rbind(top100d3, dtRow)
}
}
}
top100d3$dataset <- unlist(top100d3$dataset)
save(top100d3, file = paste0(outputFolder, "top100SS_3d_hics",format(Sys.Date(), format="%Y%m%d"), ".RData"))
outputFolder <- "D:/Uni/SS16/Hiwi/github/Master/Tests/04_TestsOverlapHubs_HiCS/"
save(top100d3, file = paste0(outputFolder, "top100SS_3d_hics",format(Sys.Date(), format="%Y%m%d"), ".RData"))
save(top100d3, file = paste0(outputFolder, "top100SS_3d_hics_",format(Sys.Date(), format="%Y%m%d"), ".RData"))
pos_v <- top100d3$position
df <- data.frame(pos_v)
vT <- rep(c(3), each=nrow(df))
df$freq <- vT
df.exp3 <- df[rep(seq(nrow(df)), df$freq), 1:2]
positions3v <- df.exp3$pos_v
View(top100d3)
pos_v <- top100d3$position
df <- data.frame(pos_v)
vT <- rep(c(3), each=nrow(df))
df$freq <- vT
df.exp3 <- df[rep(seq(nrow(df)), df$freq), 1:2]
positions3v <- df.exp3$pos_v
df.exp3
df$freq
View(top100d3)
rep(c(3), each=nrow(df))
vT <- rep(3, each=nrow(df))
vT <- rep(3, each=nrow(df))
nrow(df)
df <- data.frame(pos_v)
View(df)
ncol(df)
vT <- rep(c(3), each=ncol(df))
vT <- rep(c(3), each=nrow(df))
df$freq <- vT
View(df)
pos_v <- top100d3$position
pos_v
rep(1:4, 2)
rep(1:4, each = 2)
rep(pos_v, each=3)
VT <- rep(pos_v, each=3)
df$freq <- vT
df.exp3 <- df[rep(seq(nrow(df)), df$freq), 1:2]
View(df.exp3)
vt
vT
VT <- rep(pos_v, each=3)
VT
View(top100SSHics)
source("Tests/functionsOverlap.R")
