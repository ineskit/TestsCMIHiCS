{
    "collab_server" : "",
    "contents" : "library(data.table)\nlibrary(foreach)\nlibrary(\"FNN\")\nlibrary(ggplot2)\nlibrary(subcon)\nlibrary(dplyr)\nlibrary(tidyr)\n\n########################################################################################\n# functions\n########################################################################################\nimportData <- function(inputPath, fileName){\n  if(grepl(\".csv\", fileName)){\n    dataset_labeled <- fread(paste0(inputPath, \"/\", fileName))\n  }else{\n    dataset_labeled <- as.data.table(read.arff(paste0(inputPath,\"/\", fileName)))\n  }\n  if(\"id\" %in% names(dataset_labeled)){\n    dataset_labeled <- dataset_labeled[,!\"id\", with=F]\n  }\n  if(\"outlier\" %in% names(dataset_labeled)) {\n    names(dataset_labeled)[which(names(dataset_labeled)==\"outlier\")] <- \"class\"\n  }\n  if(!(\"class\" %in% names(dataset_labeled))) {\n    names(dataset_labeled)[ncol(dataset_labeled)] <- \"class\"\n  }\n  if(\"yes\" %in% levels(dataset_labeled$class)){\n    dataset_labeled$class <- as.numeric(dataset_labeled$class == \"yes\")\n  }else{\n    if(is.factor(dataset_labeled$class)){\n      dataset_labeled$class <- as.numeric(levels(dataset_labeled$class))[dataset_labeled$class]\n    }\n    dataset_labeled[,class:=ifelse(class>0, 1, 0),]\n  }\n  dataset_labeled\n}\n\nreverseNN <- function(dt,k){\n  stopifnot(k<nrow(dt))\n  knnList <- get.knn(dt,k = k)\n  rnnList <- reverseNearestNeighborsC(knnList$nn.index)\n  rnnCount <- rnnCountC(rnnList)\n  rnnVec <- rnnCountCVec(rnnList)\n  \n  rnnVec\n}\n\n########################################################################################\n# rnn\n########################################################################################\ncolum <- c(2,16:20)\nk <- 5\nload(\"experimentResult_allDatasets.RData\")\ninputPath <- \"D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets\"\n\n# todo: Selektion der Spalten funktioniert nicht:\n# top5SS <-combinedResult[which(!duplicated(combinedResult[,16:20])),colum, ,with=FALSE]\n# top5SSN <-combinedResult[,16:20]\n# col <- c(\"dataset\", \"subsp1\", \"subsp2\")\n# test <- data.table(combinedResult)\n# test[,col, with=FALSE]\n\n# Selektion der relevanten Spalten\ncombRes <-combinedResult[,colum, with=FALSE]\ncombResU <-combRes[!duplicated(combRes)]\n\n# pro Dataset\n# foreach(i=1:nrow(combResU),\n#         .packages=c(\"foreach\")) %do% {\n\nfor(i in 1:nrow(combResU)){\n  ds <- combResU[i,]\n  # todo: dynam. DS-Lesen funktioniert nicht\n  dataset_labeled <- importData(inputPath, ds$dataset)\n  print(\"Datasets:\")\n  print(ds$dataset)\n  \n  # dataset_labeled <- importData(inputPath, \"ann_thyroid.csv\")\n  dt <- data.table(dataset_labeled)\n\n  # rnn-Count - FULLSPACE\n  \n  rnnVec <- reverseNN(dt, k)\n\n\n  # Histogram\n  hist(rnnVec)\n  distRnn <- table(rnnVec)\n  p <- ggplot() + aes(rnnVec) +geom_histogram(binwidth=.5)\n  p + labs(title=\"Distribution of rnn-Counts - FULLSPACE\") + xlab(paste0(\"Neighborhoodsize,\", ds$dataset, sep=\" \")) +  ylab(\"counts\")\n\n\n  # rnn-Count - SUBSPACES\n  \n  # gather first\n  long_DF <- combResU %>% gather(name, subsp, subsp1:subsp5)\n  #sorted <- long_DF[order(dataset),] // todo: funktioniert nicht\n  \n  \n  ss<-long_DF$subsp[2]\n  as.vector(ss, mode = \"numeric\")\n  sst<-c(1,3)\n  dt <- dt[,sst, with=FALSE] # todo: warum geht das so mit dem Vektor und nicht mit dem Vektor \"ss\"? weil ss keinen Vektor, sondern Character enthÃ¤lt\n  \n  # Subset of dt (Test mit konkretem Bsp.)\n  ann<-c(1,3)\n  dt <- dt[,ann, with=FALSE]\n  \n  rnnVecSS <- reverseNN(dt, k)\n  hist(rnnVecSS)\n  table(rnnVecSS)\n}\n\n\n# todo: erstellen und export der Plots \n# - Histogramme der rnn\n# - top Punkte mit rnn -> Hubs\n# - Punkte kleinster Anz. -> Antihubs\n\n",
    "created" : 1479816118488.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4260428534",
    "id" : "2C753A70",
    "lastKnownWriteTime" : 1479909829,
    "last_content_update" : 1479909829145,
    "path" : "D:/Uni/SS16/Hiwi/github/Master/rnn.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}