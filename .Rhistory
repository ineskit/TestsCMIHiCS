}
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
ds2 <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
}
ds2
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
ds2 <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
ds <- cbind(ds, ds2)
}
View(ds)
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
ds <- rbind(ds, v)
}
View(ds)
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
ds <- rbind(ds, v)
}
v
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
dsttttt <- rbind(dsttttt, v)
}
dsttttt<- data.frame()
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- c(algdsDistinct$dataset[i], algdsDistinct$algorithm[i], tmpMean)
# dste <- rbind(v)
dsttttt <- rbind(dsttttt, v)
}
dsttttt
dsttttt<- data.frame()
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- c(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
# dste <- rbind(v)
dsttttt <- rbind(dsttttt, v)
}
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
print(algdsDistinct$algorithm[i])
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
# dste <- rbind(v)
dsttttt <- rbind(dsttttt, v)
}
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
v
dste <- rbind(v)
dste
dste <- rbind(dste, v)
dste
dste <- rbind(dste, v)
dste
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
dsttttt <- rbind(dsttttt, v)
}
dste
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
# dsttttt <- rbind(dsttttt, v)
}
dste
class(dste)
View(dste)
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=SubspaceSizes, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
# Subspace Vector
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
long_DF <- glassSSU %>% gather(name, subsp, subsp1V:subsp20V)
sortedSS <- long_DF[order(long_DF$dataset),]
# subspace length
lengthSS <- c(length(long_DF$subsp[[1]]))
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
subspaces <- mutate(long_DF, length = lengthSS)
sortedSS <- subspaces[order(subspaces$algorithm),]
# MEAN
#   global mean
mean(subspaces$length)
# mean per algorithm
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
# mean per algorithm per dataset
datasDistinct <- subspaces %>% select(dataset) %>% distinct
algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
}
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
# Subspace Vector
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
ssv <- rbind(glassSSU, ionSSU)
View(ssv)
long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)
sortedSS <- long_DF[order(long_DF$dataset),]
View(sortedSS)
lengthSS <- c(length(long_DF$subsp[[1]]))
lenghtSS
lengthSS
long_DF$subsp[[1]]
View(long_DF)
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
subspaces <- mutate(long_DF, length = lengthSS)
sortedSS <- subspaces[order(subspaces$algorithm),]
View(sortedSS)
#   global mean
mean(subspaces$length)
# mean per algorithm
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
# mean per algorithm per dataset
datasDistinct <- subspaces %>% select(dataset) %>% distinct
algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
}
# algo <- rep(algorDistinct, length(datasDistinct))
# datas <- rep(datasDistinct, nrow(algorDistinct))
dste
View(dste)
View(dste)
rm(dste)
for (i in 1:nrow(algdsDistinct)){
# tmpMean <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm & subspaces$dataset == algdsDistinct$dataset)
#           %>% mean
# mean(select(filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv"), length))
# tmpdf <- filter(subspaces, subspaces$algorithm == "CMI" & subspaces$dataset == "glass.csv") %>% select(length)
# tmpMean(tmpdf$length)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dste <- rbind(dste, v)
}
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/experimentResult.RData")
View(combinedResult)
dste <- data.frame()
olum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
colSSVec <- c(1,2,36:55)
# load("results/Param_100_500_100/experimentResult_glass_161013.RData")
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
# Subspace Vector
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
# load("results/Param_100_500_100/experimentResult_ion_161019.RData")
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
# Subspace Vector
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
read_chunk("generatePlots.R")
colum <- c(1,2,16:20)
colNam <- c("Algorithm","Dataset","Subspace 1","Subspace 2","Subspace 3","Subspace 4","Subspace 5")
colSSVec <- c(1,2,36:55)
# load("results/Param_100_500_100/experimentResult_glass_161013.RData")
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUG <-combRes[!duplicated(combRes)]
kable(combResUG, caption = "Top-5-Subspaces - Glass-Dataset", col.names = colNam)
# Subspace Vector
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
# load("results/Param_100_500_100/experimentResult_ion_161019.RData")
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUI <-combRes[!duplicated(combRes)]
kable(combResUI, caption = "Top-5-Subspaces - Ion-Dataset", col.names = colNam)
# Subspace Vector
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
View(ionSSU)
load("results/Param_100_500_100/experimentResult_pen_161019.RData")
combRes <-combinedResult[,colum, with=FALSE]
combResUP <-combRes[!duplicated(combRes)]
kable(combResUP, caption = "Top-5-Subspaces - Pendigits-Dataset", col.names = colNam)
ssv <- rbind(glassSSU, ionSSU)
# gather first
long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)
# sortedSS <- long_DF[order(long_DF$dataset),]
# subspace length
lengthSS <- c(length(long_DF$subsp[[1]]))
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
subspaces <- mutate(long_DF, length = lengthSS)
# mean per algorithm per dataset
# datasDistinct <- subspaces %>% select(dataset) %>% distinct
# algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
View(algdsDistinct)
dste <- data.frame()
View(subspaces)
nrow(algdsDistinct)
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[1] & subspaces$dataset == algdsDistinct$dataset[1])             %>% select(length)
tmpdf
tmpMean <- mean(tmpdf$length)
tmpMean
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
v
v <- data.frame(dataset = algdsDistinct$dataset[1], algorithm = algdsDistinct$algorithm[1], mean = tmpMean)
v
dste <- rbind(dste, v)
dste
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[2] & subspaces$dataset == algdsDistinct$dataset[2])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[2], algorithm = algdsDistinct$algorithm[2], mean = tmpMean)
dste <- rbind(dste, v)
dste
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
View(SSGMD)
ggplot(dste, aes(factor(dataset), mean, fill=dataset, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dste, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
load("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
View(combinedResult)
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
read_chunk("generatePlots.R")
colSSVec <- c(1,2,36:55)
load("results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
annSS <-combinedResult[,colSSVec, with=FALSE]
annSSU <-annSS[!duplicated(annSS$algorithm)]
# load("results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData")
# breastSS <-combinedResult[,colSSVec, with=FALSE]
# breastU <-breastSS[!duplicated(breastSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_diabetes_161206.RData")
diabSS <-combinedResult[,colSSVec, with=FALSE]
diabSSU <-diabSS[!duplicated(diabSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData")
glassSS <-combinedResult[,colSSVec, with=FALSE]
glassSSU <-glassSS[!duplicated(glassSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData")
ionSS <-combinedResult[,colSSVec, with=FALSE]
ionSSU <-ionSS[!duplicated(ionSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_lymph_161206.RData")
lympSS <-combinedResult[,colSSVec, with=FALSE]
lympSSU <-lympSS[!duplicated(lympSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_pen_161206.RData")
penSS <-combinedResult[,colSSVec, with=FALSE]
penSSU <-penSS[!duplicated(penSS$algorithm)]
load("results/Param_100_050_020_SSVec/experimentResult_segmentn_161206.RData")
segmSS <-combinedResult[,colSSVec, with=FALSE]
segmSSU <-segmSS[!duplicated(segmSS$algorithm)]
ssv <- rbind(annSSU, diabSSU, glassSSU, ionSSU, lympSSU, penSSU, segmSSU)
View(ssv)
# gather first
long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)
# sortedSS <- long_DF[order(long_DF$dataset),]
# subspace length
lengthSS <- c(length(long_DF$subsp[[1]]))
#   .. add length as new column
for (i in 2:length(long_DF$subsp)){
lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))
}
lengthSS
subspaces <- mutate(long_DF, length = lengthSS)
# mean per algorithm per dataset
# datasDistinct <- subspaces %>% select(dataset) %>% distinct
# algorDistinct <- subspaces %>% select(algorithm) %>% distinct
algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct
dfMean <- data.frame()
for (i in 1:nrow(algdsDistinct)){
tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)
tmpMean <- mean(tmpdf$length)
print(tmpMean)
v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)
dfMean  <- rbind(dfMean, v)
}
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
ggtitle("Average size of Top20-Subspaces")
ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
# ggtitle("Average size of Top20-Subspaces") +
labs(title ="Average size of Top20-Subspaces", y = "Mean size")
# MEAN
#   global mean
mean(subspaces$length)
#   mean per algorithm
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
mean(SSCMI$length)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
mean(SSHics$length)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
mean(SSGMD$length)
View(tmpdf)
View(dfMean)
#   mean per algorithm
meanAlg <- data.frame()
SSCMI <- filter(subspaces, subspaces$algorithm == "CMI")
meanCMI <- mean(SSCMI$length)
nL <- data.frame(algorithm = "CMI", mean = meanCMI)
meanAlg <- rbind(meanAlg, nL)
SSHics <- filter(subspaces, subspaces$algorithm == "HiCS")
meanHics <- mean(SSHics$length)
nL <- data.frame(algorithm = "HiCS", mean = meanHics)
meanAlg <- rbind(meanAlg, nL)
SSGMD <- filter(subspaces, subspaces$algorithm == "GMD")
meanGMD <- mean(SSGMD$length)
nL <- data.frame(algorithm = "GMD", mean = meanGMD)
meanAlg <- rbind(meanAlg, nL)
meanAlg
ggplot(meanAlg, mapping = aes(factor(algorithm), mean))
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
labs(title ="Average size of Top20-Subspaces per algorithm", y = "Mean size")
ggplot(meanAlg, mapping = aes(factor(algorithm), mean, x=algorithm, y=mean, gg)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
labs(title ="Average size of Top20-Subspaces per algorithm", y = "Mean size")
View(combinedResult)
View(algdsDistinct)
diabetes <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/diabetes.csv", header=FALSE, sep=";")
View(diabetes)
nrow(combinedResult)
ncol(combinedResult)
madelonnorm <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/madelonnorm.csv", header=FALSE, sep=";")
View(madelonnorm)
madelonnorm <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/madelonnorm.csv", header=FALSE, sep=";")
View(madelonnorm)
ncol(combinedResult)
ncol(madelonnorm)
nrow(madelonnorm)
diabetes <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/diabetes.csv", header=FALSE, sep=";")
View(diabetes)
nrow(diabetes)
ncol(diabetes)
breast_diag <- read.csv("D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/datasets_tmp_notUsed/breast_diag.csv", header=FALSE, sep=";")
View(breast_diag)
ncol(breast_diag)
nrow(breast_diag)
source('D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/HICSvsCMI_Experiments.R', echo=TRUE)
finalResult <- runExperiments(inputPath = "datasets", maxMinPts = 100, numCores=1, topkSearch = 50, topkOutput = 20)
