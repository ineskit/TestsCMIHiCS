{
    "collab_server" : "",
    "contents" : "#' Local Outlier Factor\n#'\n#' Implements the LOF algorithm from the original publication, simplified by\n#' assuming unique distances.\n#'\n#' @param data n x m matrix with n objects and m dimensions\n#' @param k parameter for k-neighborhood\n#' @param mode \"exact\" mode uses individual k-distance and k-neighborhood for\n#'   each object assuming non-unique distances. For exact mode, maxK needs to be\n#'   specified. \"simple\" mode assuming unique distances.\n#' @param maxK limits up to which k-neighborhood objects are considered if they\n#'   have similar distances. A full search can be achieved by setting maxK to\n#'   (nrow(data) - 1). Setting maxK too high can lead to poor runtime performance.\n#'\n#' @return Vector of local outlier factors\n#'\n#' @references Breunig, Markus M., Hans-Peter Kriegel, Raymond T. Ng, and Joerg\n#'   Sander. 2000. LOF: Identifying Density-Based Local Outliers. SIGMOD Rec. 29\n#'   (2). New York, NY, USA: ACM: p. 93 to 104.\n#'\n#' @export\nLOF <- function (data, k, mode = \"simple\", maxK=NULL) {\n  kDist <- c()\n  switch(mode,\n         simple = {\n           distances <- FNN::get.knn(as.matrix(data), k)\n           kDist$nrow <- 1:nrow(distances$nn.dist)\n           kDist$maxkIdx <- rep(k, nrow(distances$nn.dist))\n         },\n         exact = {\n           if(is.null(maxK)){\n             stop(\"function argument maxK is missing\")\n           }\n           if(!(maxK<nrow(data))){\n             stop(\"maxK needs to be smaller than the number of data objects\")\n           }\n           distances <- FNN::get.knn(as.matrix(data), maxK)\n           distDT <- as.data.table(distances$nn.dist)\n           kDist <- distDT[, .(maxkIdx = max(which(.SD <= .SD[[1,k]]))), by=1:nrow(distDT)]\n         }\n      )\n  lrd <- reachability(distances$nn.index, distances$nn.dist, kDist$maxkIdx)\n  lof <- lofCalculation(lrd, distances$nn.index, kDist$maxkIdx)\n  switch(mode,\n         simple = {\n           return(lof)\n           },\n         exact = {\n           return(list(\"lof \"= lof, \"maxkIdx\" = kDist$maxkIdx))\n         })\n}\n",
    "created" : 1477496064497.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3827752570",
    "id" : "82E674FD",
    "lastKnownWriteTime" : 1466768190,
    "last_content_update" : 1466768190,
    "path" : "D:/Uni/SS16/Hiwi/github/R-subcon/R/OutlierModels.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}