{
    "collab_server" : "",
    "contents" : "#include <Rcpp.h>\n#include <math.h>\nusing namespace Rcpp;\nusing namespace std;\n\n// [[Rcpp::export]]\ndouble euclDist(Rcpp::NumericVector p1, NumericVector p2){\n  double dist = 0;\n  unsigned int sum = 0;\n  unsigned int dim = p1.size();\n  \n  if (p2.size() != dim){\n    // Vektoren muessen gleich lang sein, todo: fehlerhandling\n  }\n  \n  for(unsigned int i=0; i<dim; i++){\n    sum = sum + pow ((p1[i]-p2[i]),2);\n  }\n  dist = sqrt (sum);\n  return dist;\n}\n\n// [[Rcpp::export]]\nvoid knn(Rcpp::NumericMatrix points, unsigned int n){\n  double dist = 0;\n  unsigned int nrP = points.ncol();\n// calculate pairwise distances  \n for (unsigned int i=0; i<nrP; i++){\n   for(unsigned int j=i+1; j<nrP; j++){\n    \n    dist = euclDist(points(i,_), points(j,_));\n   }\n }\n   \n}\n\n\n\n/*** R\n\np1 <- c(2,2)\np2 <- c(3,2)\np3 <- c(2.5, 2.5)\np4 <- c(2,1,3,5)\np5 <- c(2,1,2,1)\n\neuclDist(p1,p2)\neuclDist(p4,p5)\n  */\n",
    "created" : 1477487940546.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1620486666",
    "id" : "FC440032",
    "lastKnownWriteTime" : 1477491594,
    "last_content_update" : 1477491594251,
    "path" : "D:/Uni/SS16/Hiwi/github/mthes/rnn.cpp",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}