{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(forcats)\nlibrary(stringr)\nlibrary(data.table)\nlibrary(tikzDevice)\n\n## ---- loadData\ncolSSVec <- c(1,2,36:55) # top 20 subspaces as vectors\ncolTop5SS <- c(1,2,16:20)   # top 5 subspaces as characters\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData\")\nannSS <-combinedResult[,colSSVec, with=FALSE]\nannSSU <-annSS[!duplicated(annSS$algorithm)]\nann5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- combinedResult \n\n# load(\"results/Param_100_050_020_SSVec/experimentResult_ann_161129.RData\")\n# breastSS <-combinedResult[,colSSVec, with=FALSE]\n# breastU <-breastSS[!duplicated(breastSS$algorithm)]\n# breast5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\n# tmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_diabetes_161206.RData\")\ndiabSS <-combinedResult[,colSSVec, with=FALSE]\ndiabSSU <-diabSS[!duplicated(diabSS$algorithm)]\ndiab5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_glass_161129.RData\")\nglassSS <-combinedResult[,colSSVec, with=FALSE]\nglassSSU <-glassSS[!duplicated(glassSS$algorithm)]\nglass5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_ion_161129.RData\")\nionSS <-combinedResult[,colSSVec, with=FALSE]\nionSSU <-ionSS[!duplicated(ionSS$algorithm)]\nion5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_lymph_161206.RData\")\nlympSS <-combinedResult[,colSSVec, with=FALSE]\nlympSSU <-lympSS[!duplicated(lympSS$algorithm)]\nlymp5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_pen_161206.RData\")\npenSS <-combinedResult[,colSSVec, with=FALSE]\npenSSU <-penSS[!duplicated(penSS$algorithm)]\npen5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ntmp <- rbind(tmp, combinedResult)\n\nload(\"results/Param_100_050_020_SSVec/experimentResult_segmentn_161206.RData\")\nsegmSS <-combinedResult[,colSSVec, with=FALSE]\nsegmSSU <-segmSS[!duplicated(segmSS$algorithm)]\nsegm5SS <-combinedResult[!duplicated(combinedResult[,colTop5SS, with=FALSE]),colTop5SS, with=FALSE]\ncombinedResult <- rbind(tmp, combinedResult)\n\n## ---- end\n\n\n\n## ---- auc\n  \n  combinedResult %>%   \n  select(dataset, algorithm, AUC_sum) %>%\n  \n  group_by(dataset, algorithm) %>%\n  slice(which.max(AUC_sum)) %>%\n  group_by(dataset, algorithm) %>%\n  summarize(mean.AUC = mean(AUC_sum), sd.AUC = sd(AUC_sum)) %>%\n  select(dataset, algorithm, mean.AUC, sd.AUC) %>%\n  \n  ggplot(aes(x = factor(dataset), y = mean.AUC, fill = algorithm)) +\n  geom_bar(position = position_dodge(), stat=\"identity\", width = 0.7) +\n  geom_errorbar(aes(ymin=mean.AUC - sd.AUC, ymax=mean.AUC + sd.AUC), width=.2, position = position_dodge(.7)) +\n  xlab(label = \"Dataset\") +\n  ylab(label = \"AUC\") +\n  scale_fill_grey(start = 0.1, end = 0.7)\n\n## ---- end\n  \n## ---- runtime\n  \n  combinedResult %>%   \n    select(dataset, algorithm, durationLOF, duationSS) %>%\n    \n    group_by(dataset, algorithm) %>%\n    slice(which.max(sum(duationSS, durationLOF))) %>%\n    group_by(dataset, algorithm) %>%\n    \n    mutate(runtime = sum(duationSS, durationLOF)) %>%\n    \n    ggplot(aes(x = factor(dataset), y = runtime, fill = algorithm)) +\n    geom_bar(position = position_dodge(), stat=\"identity\", width = 0.7) +\n    xlab(label = \"Dataset\") +\n    ylab(label = \"Runtime in sec.\") +\n    scale_fill_brewer(palette = \"Set2\") \n## ---- end\n  \n  \n  \n  \n  \n  \n## ---- meanSizeTop20SS \n  ssv <- rbind(annSSU, diabSSU, glassSSU, ionSSU, lympSSU, penSSU, segmSSU)\n  \n  # gather first \n  long_DF <- ssv %>% gather(name, subsp, subsp1V:subsp20V)\n  \n  \n  long_DF <- long_DF[order(long_DF$algorithm),]\n  \n  # subspace length\n  lengthSS <- c(length(long_DF$subsp[[1]]))\n  #   .. add length as new column \"length\"\n  for (i in 2:length(long_DF$subsp)){\n    lengthSS <- c(lengthSS, length(long_DF$subsp[[i]]))\n  }\n  subspaces <- mutate(long_DF, length = lengthSS) \n  \n  # mean per algorithm per dataset\n  algdsDistinct <- subspaces %>% select(algorithm, dataset) %>% distinct\n  \n  dfMean <- data.frame()\n  for (i in 1:nrow(algdsDistinct)){\n    \n    tmpdf <- filter(subspaces, subspaces$algorithm == algdsDistinct$algorithm[i] & subspaces$dataset == algdsDistinct$dataset[i])             %>% select(length)\n    \n    tmpMean <- mean(tmpdf$length)\n    # print(tmpMean)\n    v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean)\n    dfMean  <- rbind(dfMean, v)\n    \n  }\n  \n  \n  ggplot(dfMean, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +\n    geom_bar(stat=\"identity\", position = \"dodge\") + \n    scale_fill_brewer(palette = \"Set2\") +\n    labs(title =\"Average size of Top20-Subspaces\", y = \"Mean size\") \n## ---- end\n  \n  \n  \n## ---- meanSizeTop5SS\n  \n  top5Length <- filter(subspaces, subspaces$name == \"subsp1V\" | subspaces$name == \"subsp2V\" | subspaces$name == \"subsp3V\"\n                       | subspaces$name == \"subsp4V\" | subspaces$name == \"subsp5V\") \n  \n  dfMean5 <- data.frame()\n  for (i in 1:nrow(algdsDistinct)){\n    \n    tmpdf5 <- filter(top5Length, top5Length$algorithm == algdsDistinct$algorithm[i] & top5Length$dataset == algdsDistinct$dataset[i])             %>% select(length)\n    \n    tmpMean5 <- mean(tmpdf5$length)\n    # print(tmpMean)\n    v <- data.frame(dataset = algdsDistinct$dataset[i], algorithm = algdsDistinct$algorithm[i], mean = tmpMean5)\n    dfMean5  <- rbind(dfMean5, v)\n  }\n  \n  ggplot(dfMean5, aes(factor(dataset), mean, fill=algorithm, x=dataset, y=mean, gg)) +\n    geom_bar(stat=\"identity\", position = \"dodge\") + \n    scale_fill_brewer(palette = \"Set2\") +\n    ggtitle(\"Average size of Top5-Subspaces\")\n  \n## ---- end\n  \n## ---- sampleSS \n  colNam <- c(\"Algorithm\",\"Dataset\",\"Subspace 1\",\"Subspace 2\",\"Subspace 3\",\"Subspace 4\",\"Subspace 5\")\n  \n  kable(glass5SS, caption = \"Top-5-Subspaces - Glass-Dataset\", col.names = colNam)\n  kable(ion5SS, caption = \"Top-5-Subspaces - Ion-Dataset\", col.names = colNam)\n  kable(pen5SS, caption = \"Top-5-Subspaces - Pendigits-Dataset\", col.names = colNam)\n## ---- end\n  \n  \n  \n  \n## ---- meanSizealg\n    meanAlg <- data.frame()\n  SSCMI <- filter(subspaces, subspaces$algorithm == \"CMI\")\n  meanCMI <- mean(SSCMI$length)\n  nL <- data.frame(algorithm = \"CMI\", mean = meanCMI)\n  meanAlg <- rbind(meanAlg, nL)\n  \n  SSHics <- filter(subspaces, subspaces$algorithm == \"HiCS\")\n  meanHics <- mean(SSHics$length)\n  nL <- data.frame(algorithm = \"HiCS\", mean = meanHics)\n  meanAlg <- rbind(meanAlg, nL)\n  \n  SSGMD <- filter(subspaces, subspaces$algorithm == \"GMD\")\n  meanGMD <- mean(SSGMD$length)\n  nL <- data.frame(algorithm = \"GMD\", mean = meanGMD)\n  meanAlg <- rbind(meanAlg, nL)\n  \n  ggplot(meanAlg, mapping = aes(factor(algorithm), mean, x=algorithm, y=mean, gg)) +\n    geom_bar(stat=\"identity\", position = \"dodge\") + \n    scale_color_brewer(palette = \"Set2\") +\n    labs(title =\"Average size of Top20-Subspaces per algorithm\", y = \"Mean size\") \n## ---- end\n  ",
    "created" : 1482947476747.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1821067976",
    "id" : "570E2646",
    "lastKnownWriteTime" : 1481121307,
    "last_content_update" : 1481121307,
    "path" : "D:/Uni/SS16/Hiwi/github/TestsCMIHiCS/generatePlots.R",
    "project_path" : "generatePlots.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}