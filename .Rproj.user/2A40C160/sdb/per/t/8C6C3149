{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(forcats)\nlibrary(stringr)\nlibrary(data.table)\nlibrary(tikzDevice)\n## ---- plotSyntheticData\n\nload(\"results/exp-2016-09-13-001-run001.RData\")\n\nplotThemeSynth <- theme_bw() +\n  theme(axis.title.x=element_text(margin=margin(15,0,0,0)),\n        axis.title.y= element_text(margin = margin(0,15,0,0)),\n        axis.text = element_text(margin = margin(0,0,0,0)),\n        axis.title.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.margin = unit(c(0, 0, 0.3, 0), \"lines\"),\n        panel.border = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line( size=.3, color=\"black\"),\n        panel.grid.minor.y = element_blank(),\n        legend.title=element_blank(),\n        legend.key=element_rect(size=3, color=\"white\"),\n        legend.key.size = unit(1, \"lines\"),\n        legend.key.height=unit(1,\"lines\"),\n        legend.key=element_rect(size=1, color=\"white\"),\n        legend.key.size = unit(1, \"lines\"),\n        legend.key.height=unit(1,\"lines\"),\n        legend.position=\"right\")\n\nplotSynth  <- combinedResult %>% \n  mutate(data.name = str_replace(str_sub(dataset, str_locate(dataset, \"dim_[0-9]{3}\")[,\"start\"], \n                                         str_locate(dataset, \"dim_[0-9]{3}\")[,\"end\"]), \"dim_0*\", \"\")) %>% \n  mutate(data.name = factor(data.name,\n                            levels = unique(data.name[order(as.numeric(data.name))]))) %>%\n  select(dataset, data.name, algorithm, AUC = AUC_max, Rprecision_adj = Rprecision_adj_sum) %>%\n  \n  group_by(dataset, algorithm) %>%\n  slice(which.max(AUC)) %>%\n  group_by(data.name, algorithm) %>%\n  summarize(mean.AUC = mean(AUC), sd.AUC = sd(AUC)) %>%\n  select(data.name, algorithm, mean.AUC, sd.AUC) %>%\n  \n  ggplot(aes(x = factor(data.name, labels = sapply(unique(data.name[order(as.numeric(data.name))]), function(x) paste0(x,\"-dim\"))), \n             y = mean.AUC, \n             fill = algorithm)) +\n  geom_bar(position = position_dodge(), stat=\"identity\", width = 0.7) +\n  geom_errorbar(aes(ymin=mean.AUC - sd.AUC, ymax=mean.AUC + sd.AUC), width=.2, position = position_dodge(.7)) +\n  xlab(label = \"Dataset Dimensionality\") +\n  ylab(label = \"AUC\") +\n  plotThemeSynth +\n  scale_fill_grey(start = 0.1, end = 0.7)\n\n## ---- end\n\nfilename <- \"experiments_synth.tex\"\ntikz(filename, standAlone = F, width=7, height=2)\n\nplotSynth\ndev.off()\n\nplotSynth\n\n## ---- plotRealWorldData\n\nload(\"results/exp-2016-09-19-musk2-s3102-sim02.RData\") # musk2\ntmp <- combinedResult \nload(\"results/exp-2016-09-19-secom-s3102-sim02.RData\") # secom\ntmp <- rbind(tmp, combinedResult)\nload(\"results/exp-2016-09-15-002-run002-s3102-sim03.RData\") # har [debug]\ntmp <- rbind(tmp, combinedResult)\ncombinedResult <- tmp\n\n#string parsing to extract information from dataset names\ncombinedResult <- combinedResult %>% \n  mutate(normalized = str_detect(dataset, \"norm\"),\n         duplicatesRemoved = str_detect(dataset, \"withoutdupl\"),\n         data.name = str_sub(dataset, str_locate(dataset, \"/?[:alpha:]*[0-9]?_\")[,\"start\"]+1, str_locate(dataset, \"/?[:alpha:]*[0-9]?_\")[, \"end\"]-1),\n         outlierPercentage = as.integer(str_sub(dataset, str_locate(dataset, \"_[0-9]{2}(_|.)\")[,\"start\"] + 1, str_locate(dataset, \"_[0-9]{2}(_|.)\")[,\"end\"] -1)),\n         version = as.integer(str_sub(dataset, str_locate(dataset, \"v[0-9]{2}\")[,\"start\"]+1, str_locate(dataset, \"v[0-9]{2}\")[,\"end\"]))) \n\nplotThemeReal <- theme_bw() +\n  theme(plot.title = element_text(size=40, vjust = 2.5, face = \"bold\"),\n        axis.title.x = element_text(margin = margin(15,0,0,0)),\n        axis.title.y = element_text(margin = margin(0,15,0,0)),\n        axis.text = element_text(margin = margin(0,0,0,0)),\n        axis.ticks.y = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.margin = unit(c(0, 0, 0.3, 0), \"lines\"),\n        panel.border = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line( size=.3, color=\"black\"),\n        legend.key = element_rect(size=1, color=\"white\"),\n        legend.key.size = unit(1, \"lines\"),\n        legend.key.height=unit(1,\"lines\"),\n        legend.title = element_blank(),\n        legend.position = \"right\",\n        strip.background = element_blank(),\n        strip.text = element_text(size = 12),\n        panel.margin.x=unit(1.5, \"lines\"))\n\nplotReal <- combinedResult %>% \n  select(dataset, data.name, algorithm, outlierPercentage, AUC = AUC_sum, normalized, duplicatesRemoved) %>%\n  mutate(AUC = 0.5 + abs(0.5 - AUC)) %>% \n  group_by(dataset, algorithm) %>%\n  slice(which.max(AUC)) %>%\n  mutate(percentageDisplay = paste0(\"[\", outlierPercentage, \"%]\")) %>%\n  \n  ggplot(aes(x=fct_reorder(percentageDisplay, outlierPercentage) , y=AUC, fill=algorithm)) +\n  geom_boxplot() +\n  facet_wrap(~data.name, nrow=1, scales = \"free_x\") +\n  xlab(label = \"Outlier Percentage\") +\n  ylab(label = \"AUC\") +\n  plotThemeReal +\n  scale_y_continuous(limits = c(0.5,1)) +\n  scale_fill_grey(start = 0.1, end = 0.7) \n\n## ---- end\nfilename <- \"experiments_compos.tex\"\ntikz(filename, standAlone = F, width=7, height=3)\n\nplotReal\ndev.off()\n\nplotReal\n\n\n## ---- Duration bar stack\n\ndurationPlotTheme <- theme_bw() +\n  theme(plot.title = element_text(size=40, vjust = 2.5, face = \"bold\"),\n        axis.title.x = element_text(margin = margin(15,0,0,0)),\n        axis.title.y = element_text(margin = margin(0,15,0,0)),\n        axis.text = element_text(margin = margin(0,0,0,0)),\n        axis.ticks.y = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.margin = unit(c(0, 0, 0.3, 0), \"lines\"),\n        panel.border = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line( size=.3, color=\"black\"),\n        legend.key = element_rect(size=1, color=\"white\"),\n        legend.key.size = unit(1, \"lines\"),\n        legend.key.height=unit(1,\"lines\"),\n        legend.title = element_blank(),\n        legend.position = \"right\",\n        strip.background = element_blank(),\n        strip.text = element_text(size = 12),\n        panel.margin.x=unit(1.5, \"lines\"))\n\nplotDuration <- combinedResult %>% \n  filter(algorithm!=\"FS\") %>%\n  select(data.name, algorithm, durationLOF, duationSS) %>%\n  group_by(data.name, algorithm) %>%\n  summarise(durationLOF.mean = mean(durationLOF),\n            durationSS.mean = mean(duationSS)) %>%\n  gather(processingStep, duration, durationLOF.mean:durationSS.mean) %>%\n  arrange(desc(processingStep)) %>%\n  mutate(processingStep = fct_recode(processingStep, \"LOF\" = \"durationLOF.mean\",\n                                     \"Subspace Search\" = \"durationSS.mean\")) %>% \n  \n  ggplot(aes(x= algorithm, y = duration, fill = fct_relevel(processingStep, c(\"Subspace Search\", \"LOF\")))) + \n  geom_bar(stat = \"identity\", color = \"white\") +\n  ylab(label = \"runtime [s]\") +\n  facet_wrap(~data.name, nrow=1) + \n  scale_fill_grey(start = 0.2, end = 0.6) +\n  durationPlotTheme\n\n## ---- end\n\nfilename <- \"experiments_duration.tex\"\ntikz(filename, standAlone = F, width=7, height=3)\n\nplotDuration\ndev.off()\n\nplotDuration\n\n\n\n## ---- TableMedianRPrecision\n\nload(\"results/experimentResult_real_seed3103.RData\")\n\nmedianRPrec <- combinedResult %>% \n  mutate(data.name = str_sub(dataset, 1, str_locate(dataset, \"/\")[,\"start\"] - 1)) %>%\n  select(dataset, data.name, algorithm, AUC = AUC_max, Rprecision_adj = Rprecision_adj_max) %>%\n  mutate(AUC = 0.5 + abs(0.5 - AUC)) %>% \n  group_by(dataset, algorithm) %>%\n  slice(which.max(AUC)) %>%\n  group_by(data.name, algorithm) %>%\n  summarize(data.name, algorithm, Rprecision_adj.median = median(Rprecision_adj)) %>%\n  select(data.name, algorithm, Rprecision_adj.median) %>%\n  spread(algorithm, Rprecision_adj.median) %>%\n  group_by(data.name) %>%\n  summarize(FS = round(max(FS, na.rm = T), 2), GMD = round(max(GMD, na.rm = T), 2), HiCS = round(max(HiCS, na.rm = T), 2))\n\n## ---- end\n\nmedianRPrec\n\n\n\n\n\n\n\n\n",
    "created" : 1477469380127.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1759749175",
    "id" : "8C6C3149",
    "lastKnownWriteTime" : 1476175061,
    "last_content_update" : 1476175061,
    "path" : "D:/Uni/SS16/Hiwi/github/GMDPublicationCode/generatePlots.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}